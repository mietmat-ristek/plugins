<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="adm_sample_plugin_member" xml:space="preserve">
    <value>Beam Truss with simplified input</value>
  </data>
  <data name="insert_member_object_plugin" xml:space="preserve">
    <value>Add beam</value>
  </data>
  <data name="insertMemberBeetweenTwoExistRoofElements" xml:space="preserve">
    <value>Insert a member beetween two exist roof elements.</value>
  </data>
  <data name="selectTheFirstBeam" xml:space="preserve">
    <value>Select the first beam</value>
  </data>
  <data name="selectTheSecondBeam" xml:space="preserve">
    <value>Select the second beam</value>
  </data>
  <data name="wrongInputType" xml:space="preserve">
    <value>Wrong input type. Please select timber beam</value>
  </data>
  <data name="pointsCannotBeTheSame" xml:space="preserve">
    <value>First and second point cannot be the same</value>
  </data>
  <data name="setRotationRelativeToTheRoofSlope" xml:space="preserve">
    <value>Set the rotation relative to the roof slope</value>
  </data>
  <data name="rotateBeam" xml:space="preserve">
    <value>Rotate the beam</value>
  </data>
  <data name="drawBeam" xml:space="preserve">
    <value>Draw the beam</value>
  </data>
  <data name="setBeamDimensions" xml:space="preserve">
    <value>Set beam dimensions</value>
  </data>
  <data name="horizontalDimension" xml:space="preserve">
    <value>Horizontal dimension [mm]</value>
  </data>
  <data name="verticalDimension" xml:space="preserve">
    <value>Vertical dimension [mm]</value>
  </data>
  <data name="setHorizontalInsertionFromReferencePart1" xml:space="preserve">
    <value>Set the beam horizontal insertion distance from reference</value>
  </data>
  <data name="setHorizontalInsertionFromReferencePart2" xml:space="preserve">
    <value>beam start point (to the new beam axis)</value>
  </data>
  <data name="distance" xml:space="preserve">
    <value>Distance [mm]</value>
  </data>
  <data name="setBeamMultiplication" xml:space="preserve">
    <value>Set the beam multiplication</value>
  </data>
  <data name="multiplyBeamWithSpacing" xml:space="preserve">
    <value>Multiply beam with spacing</value>
  </data>
  <data name="alignementForNewBeam" xml:space="preserve">
    <value>Alignment for new beam</value>
  </data>
  <data name="alignementForExistBeam" xml:space="preserve">
    <value>Alignment for exist beam</value>
  </data>
  <data name="topEdge" xml:space="preserve">
    <value>Upper plane</value>
  </data>
  <data name="bottomEdge" xml:space="preserve">
    <value>Bottom plane</value>
  </data>
  <data name="center" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="setBeamExtension" xml:space="preserve">
    <value>Set beam extension</value>
  </data>
  <data name="beamStartExtension" xml:space="preserve">
    <value>Beam start extension [mm]</value>
  </data>
  <data name="beamEndExtension" xml:space="preserve">
    <value>Beam end extension [mm]</value>
  </data>
  <data name="beamHeight" xml:space="preserve">
    <value>beam height</value>
  </data>
  <data name="beamThickness" xml:space="preserve">
    <value>beam thickness</value>
  </data>
  <data name="beamHorizontalInsertionDistance" xml:space="preserve">
    <value>beam horizontal insertion distance</value>
  </data>
  <data name="beamMultiplySpacing" xml:space="preserve">
    <value>beam multiply spacing</value>
  </data>
  <data name="newBeamAlignement" xml:space="preserve">
    <value>new beam alignement</value>
  </data>
  <data name="existBeamAlignement" xml:space="preserve">
    <value>exist beam alignement</value>
  </data>
  <data name="convertToMemberAlignementError" xml:space="preserve">
    <value>ConvertToMemberAlignment error for</value>
  </data>
  <data name="wrong" xml:space="preserve">
    <value>Wrong</value>
  </data>
  <data name="willBeSetTo0" xml:space="preserve">
    <value>Will be set to 0</value>
  </data>
  <data name="unknownAlignementOption" xml:space="preserve">
    <value>Unknown alignement option</value>
  </data>
  <data name="warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="fillInRequiredFields" xml:space="preserve">
    <value>Please complete all required fields</value>
  </data>
  <data name="_PlaneAlignementEnum_toAxis" xml:space="preserve">
    <value>to axis</value>
  </data>
  <data name="_PlaneAlignementEnum_toBottom" xml:space="preserve">
    <value>to bottom / back</value>
  </data>
  <data name="_PlaneAlignementEnum_toTop" xml:space="preserve">
    <value>to top / front</value>
  </data>
  <data name="_LoadingFileError" xml:space="preserve">
    <value>Unable to load file: {0}.</value>
  </data>
  <data name="_SavingFileError" xml:space="preserve">
    <value>Unable to save file: {0}.</value>
  </data>
  <data name="_OffsetLengwiseBottomDesc" xml:space="preserve">
    <value>bottom edge distance</value>
  </data>
  <data name="_OffsetLengwiseTopDesc" xml:space="preserve">
    <value>top edge distance</value>
  </data>
  <data name="_OffsetPerpendicularDesc" xml:space="preserve">
    <value>offset from plane</value>
  </data>
  <data name="_PlaneAlignementDesc" xml:space="preserve">
    <value>plane alignement</value>
  </data>
  <data name="_beamTrussesFolderNameInBuilding" xml:space="preserve">
    <value>Beam Trusses</value>
  </data>
  <data name="_beamTrussNodeName" xml:space="preserve">
    <value>Beam Truss wind</value>
  </data>
  <data name="_DimensionHeight" xml:space="preserve">
    <value>Dimension height</value>
  </data>
  <data name="_DimensionLength" xml:space="preserve">
    <value>Dimension length</value>
  </data>
  <data name="_errorMembersNotParallel" xml:space="preserve">
    <value>First and second Member are not parallel</value>
  </data>
  <data name="_errorSameTruss" xml:space="preserve">
    <value>First and second truss cannot be the same</value>
  </data>
  <data name="_errorTrussesNotParallel" xml:space="preserve">
    <value>First and second truss are not parallel</value>
  </data>
  <data name="_IncorrectInput" xml:space="preserve">
    <value>Incorrect input</value>
  </data>
  <data name="_LoadingFileError_DocumentSerializer" xml:space="preserve">
    <value>Failed to load file.\n{0}</value>
  </data>
  <data name="_MenuToolTip" xml:space="preserve">
    <value>Generating beam truss between two selected trusses.</value>
  </data>
  <data name="_preInputs0" xml:space="preserve">
    <value>Select Member in the first truss</value>
  </data>
  <data name="_preInputs1" xml:space="preserve">
    <value>Select Member in the second truss</value>
  </data>
  <data name="_preInputs2" xml:space="preserve">
    <value>Modify new beam truss alignment or press Enter (confirm) or ESC (cancel)</value>
  </data>
  <data name="_SavingFileError_DocumentSerializer" xml:space="preserve">
    <value>Failed to save data file.</value>
  </data>
  <data name="_Support1" xml:space="preserve">
    <value>Beam Truss Support 1</value>
  </data>
  <data name="_Support2" xml:space="preserve">
    <value>Beam Truss Support 2</value>
  </data>
  <data name="_supportsFolderName" xml:space="preserve">
    <value>Supports</value>
  </data>
  <data name="_AutosetTrussParamsInEditModeDesc" xml:space="preserve">
    <value>autoset openings count</value>
  </data>
  <data name="_KnagaModeDesc" xml:space="preserve">
    <value>adding vertical heel blocking truss over support mode</value>
  </data>
  <data name="_preInputs0_extended" xml:space="preserve">
    <value>Select [option 1] Member in the first truss or [option 2] support</value>
  </data>
  <data name="_errorMembersNotAboveSupport" xml:space="preserve">
    <value>Member is not located above Support</value>
  </data>
  <data name="_OutreachPerpPrimaryDesc" xml:space="preserve">
    <value>outreach beyond perimeter A</value>
  </data>
  <data name="_OutreachPerpSeccondaryDesc" xml:space="preserve">
    <value>outreach beyond perimeter B</value>
  </data>
  <data name="_preInputs0_knaga" xml:space="preserve">
    <value>Select Member of Top Chord located above Support in the first truss</value>
  </data>
  <data name="_AutoaddSupportsDesc" xml:space="preserve">
    <value>generate beam truss with supports</value>
  </data>
  <data name="_beamTrussKnagaNodeName" xml:space="preserve">
    <value>Heel blocking truss</value>
  </data>
  <data name="timberBeam" xml:space="preserve">
    <value>Timber Beam</value>
  </data>
  <data name="steelBeam" xml:space="preserve">
    <value>Steel Beam</value>
  </data>
  <data name="selectionOfBeamType" xml:space="preserve">
    <value>Selection of beam type</value>
  </data>
  <data name="firstSelectedBeamCoordinates" xml:space="preserve">
    <value>Coordinates beam 1</value>
  </data>
  <data name="secondSelectedBeamCoordinates" xml:space="preserve">
    <value>Coordinates beam 2</value>
  </data>  
  <data name="startPoint" xml:space="preserve">
    <value>Start point</value>
  </data>
  <data name="endPoint" xml:space="preserve">
    <value>End point</value>
  </data>


</root>